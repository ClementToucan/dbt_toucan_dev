{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.0", "generated_at": "2024-08-15T11:07:31.874286Z", "invocation_id": "f5007808-20a4-4103-8512-f6b4c1fa1959", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-15T11:07:28.192110Z", "completed_at": "2024-08-15T11:07:28.219798Z"}, {"name": "execute", "started_at": "2024-08-15T11:07:28.220452Z", "completed_at": "2024-08-15T11:07:31.869375Z"}], "thread_id": "Thread-1", "execution_time": 3.679719924926758, "adapter_response": {"_message": "CREATE TABLE (5.7k rows, 0 processed)", "code": "CREATE TABLE", "rows_affected": 5691, "bytes_processed": 0, "bytes_billed": 0, "location": "EU", "project_id": "data-finance-staging", "job_id": "67d57454-c34b-4999-8b6c-0609ec1762fc", "slot_ms": 4210}, "message": "CREATE TABLE (5.7k rows, 0 processed)", "failures": null, "unique_id": "model.toucan_toco_dbt.dim_date_bis", "compiled": true, "compiled_code": "\n\nSELECT\n  day,\n  is_month_last_day,\n  year,\n  -- format quarter\n  quarter_number,\n EXTRACT(year FROM day) || '-Q' || CAST(EXTRACT(quarter FROM day) AS STRING)\n\n     AS quarter,\n  \n  -- format month\n  month_number,\nEXTRACT(year FROM day) || '-' ||\n        CASE WHEN LENGTH(CAST(EXTRACT(month FROM day) AS STRING))>1 \n            THEN CAST(EXTRACT(month FROM day) AS STRING)\n        ELSE '0' || CAST(EXTRACT(month FROM day) AS STRING)\n        END\n     AS month,\n  \n  -- format week\n  week_number,\n  EXTRACT(year FROM day) || '-w' ||\n        CASE WHEN LENGTH(CAST(EXTRACT(week(monday) FROM day) AS STRING))>1 \n            THEN CAST(EXTRACT(week(monday) FROM day) AS STRING)\n        ELSE '0' || CAST(EXTRACT(week(monday) FROM day) AS STRING)\n        END\n\n     AS week,\n\n  -- Date parts\n\n  CASE WHEN DATE_TRUNC(DATE(day), year) = DATE_TRUNC(DATE(CURRENT_DATE()), year) THEN 1 ELSE 0 END\n\n      as date_is_current_year,\n  CASE WHEN DATE_TRUNC(DATE(day),year) = DATE_TRUNC(DATE_SUB(DATE(CURRENT_DATE()), INTERVAL 1 year), year) THEN 1 ELSE 0 END\n\n     as date_is_last_year,\n  CASE WHEN DATE_TRUNC(DATE(day),year) = DATE_TRUNC(DATE_ADD(DATE(CURRENT_DATE()), INTERVAL 1 year), year) THEN 1 ELSE 0 END\n\n     as date_is_next_year,\n\n  CASE WHEN DATE_TRUNC(DATE(day), quarter) = DATE_TRUNC(DATE(CURRENT_DATE()), quarter) THEN 1 ELSE 0 END\n\n     as date_is_current_quarter,\n  CASE WHEN DATE_TRUNC(DATE(day),quarter) = DATE_TRUNC(DATE_SUB(DATE(CURRENT_DATE()), INTERVAL 1 quarter), quarter) THEN 1 ELSE 0 END\n\n     as date_is_last_quarter,\n  CASE WHEN DATE_TRUNC(DATE(day),quarter) = DATE_TRUNC(DATE_ADD(DATE(CURRENT_DATE()), INTERVAL 1 quarter), quarter) THEN 1 ELSE 0 END\n\n     as date_is_next_quarter,\n  \n  CASE WHEN DATE_TRUNC(DATE(day), month) = DATE_TRUNC(DATE(CURRENT_DATE()), month) THEN 1 ELSE 0 END\n\n     as date_is_current_month,\n  CASE WHEN DATE_TRUNC(DATE(day),month) = DATE_TRUNC(DATE_SUB(DATE(CURRENT_DATE()), INTERVAL 1 month), month) THEN 1 ELSE 0 END\n\n     as date_is_last_month,\n  CASE WHEN DATE_TRUNC(DATE(day),month) = DATE_TRUNC(DATE_ADD(DATE(CURRENT_DATE()), INTERVAL 1 month), month) THEN 1 ELSE 0 END\n\n     as date_is_next_month,\n  \n  CASE WHEN DATE_TRUNC(DATE(day),week(monday)) = DATE_TRUNC(DATE_SUB(DATE(CURRENT_DATE()), INTERVAL 1 week), week(monday)) THEN 1 ELSE 0 END\n\n     as date_is_last_week,\n  CASE WHEN DATE_TRUNC(DATE(day), week(monday)) = DATE_TRUNC(DATE(CURRENT_DATE()), week(monday)) THEN 1 ELSE 0 END\n\n     as date_is_current_week,\n  CASE WHEN DATE_TRUNC(DATE(day),week(monday)) = DATE_TRUNC(DATE_ADD(DATE(CURRENT_DATE()), INTERVAL 1 week), week(monday)) THEN 1 ELSE 0 END\n\n     as date_is_next_week,\n\n\n  CASE\n            WHEN DATE(day) >= DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL 1 week), week(monday)) THEN 1\n            ELSE 0 END\n             as date_is_after_this_week,\n  CASE\n                    WHEN DATE(day) >= DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL 1 month), month) THEN 1\n                    ELSE 0 END\n             as date_is_after_this_month,\n  CASE\n                    WHEN DATE(day) >= DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL 1 quarter), quarter) THEN 1\n                    ELSE 0 END\n             as date_is_after_this_quarter,\n  CASE\n                    WHEN DATE(day) >= DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL 1 year), year) THEN 1\n                    ELSE 0 END\n             as date_is_after_this_year,\n\n  CASE WHEN DATE(day) = DATE_SUB(DATE_ADD(DATE_TRUNC(day, year), INTERVAL 1 year), INTERVAL 1 DAY) THEN 1 ELSE 0 END\n\n as date_is_last_day_of_year,\n  CASE WHEN DATE(day) = DATE_SUB(DATE_ADD(DATE_TRUNC(day, month), INTERVAL 1 month), INTERVAL 1 DAY) THEN 1 ELSE 0 END\n\n as date_is_last_day_of_month,\n  CASE WHEN DATE(day) = DATE_SUB(DATE_ADD(DATE_TRUNC(day, quarter), INTERVAL 1 quarter), INTERVAL 1 DAY) THEN 1 ELSE 0 END\n\n as date_is_last_day_of_quarter,\n\n\n\n\n\nFROM (\n  SELECT\n    day,\n    -- year\n    EXTRACT(year\n    FROM\n      day) AS year,\n    -- get quarter\n    EXTRACT(QUARTER\n    FROM\n      day) AS quarter_number,\n    -- get month\n    EXTRACT(month\n    FROM\n      day) AS month_number,\n    -- is last day of the month\n    CASE\n      WHEN day = DATE_SUB(DATE_TRUNC(DATE_ADD(day, INTERVAL 1 MONTH), MONTH), INTERVAL 1 DAY) THEN TRUE\n    ELSE\n    FALSE\n  END\n    AS is_month_last_day,\n    -- get week (EU)\n    EXTRACT(week\n    FROM\n      day) AS week_number\n  FROM\n    UNNEST(GENERATE_DATE_ARRAY('2010-01-01',DATE_SUB(DATE_TRUNC(DATE_ADD(CURRENT_DATE(), INTERVAL 1 YEAR), MONTH),\n INTERVAL 1 DAY), INTERVAL 1 day)) day\n  ORDER BY\n    day DESC )", "relation_name": "`data-finance-staging`.`dbt_clement_msika`.`dim_date_bis`"}], "elapsed_time": 5.187443971633911, "args": {"print": true, "strict_mode": false, "cache_selected_only": false, "use_colors_file": true, "partial_parse_file_diff": true, "indirect_selection": "eager", "log_format": "default", "log_level_file": "debug", "select": [], "invocation_command": "dbt run", "defer": false, "log_path": "/Users/clementmsika/Desktop/dbt/dev/data-finance-dbt/logs", "vars": {}, "populate_cache": true, "send_anonymous_usage_stats": true, "exclude": [], "favor_state": false, "log_level": "info", "introspect": true, "macro_debugging": false, "static_parser": true, "quiet": false, "use_colors": true, "profiles_dir": "/Users/clementmsika/Desktop/dbt/dev/data-finance-dbt", "enable_legacy_logger": false, "partial_parse": true, "version_check": true, "which": "run", "log_file_max_bytes": 10485760, "project_dir": "/Users/clementmsika/Desktop/dbt/dev/data-finance-dbt", "warn_error_options": {"include": [], "exclude": []}, "log_format_file": "debug", "write_json": true, "show_resource_report": false, "printer_width": 80}}